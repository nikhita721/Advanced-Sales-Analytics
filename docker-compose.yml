version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sales_analytics_db
    environment:
      POSTGRES_DB: sales_analytics
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d sales_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sales_analytics_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  api:
    build: .
    container_name: sales_analytics_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/sales_analytics
      - DATABASE_URL_ASYNC=postgresql+asyncpg://user:password@postgres:5432/sales_analytics
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    command: ["python", "-m", "uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Streamlit Dashboard
  dashboard:
    build: .
    container_name: sales_analytics_dashboard
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/sales_analytics
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./dashboard.py:/app/dashboard.py
    command: ["streamlit", "run", "dashboard.py", "--server.port=8501", "--server.address=0.0.0.0"]

  # Celery Worker for Background Tasks
  celery_worker:
    build: .
    container_name: sales_analytics_worker
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/sales_analytics
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build: .
    container_name: sales_analytics_beat
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/sales_analytics
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    command: ["celery", "-A", "app.celery_app", "beat", "--loglevel=info"]

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: sales_analytics_network
